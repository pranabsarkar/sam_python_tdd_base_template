AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Globals:
  Function:
    Timeout: 180

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handler_sample.handle
      Runtime: python3.8
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  DataImportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handler_data_import.handle
      Runtime: python3.8
      Role: arn:aws:iam::301598911115:role/poc_data_load
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: "txt"

  DbWriteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handler_db_write.handle
      Runtime: python3.8
      Role: arn:aws:iam::301598911115:role/poc_data_load
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SimpleQueue.Arn
            BatchSize: 1

  DlqSnsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handler_dlq_sns.handle
      Runtime: python3.8
      Role: arn:aws:iam::301598911115:role/poc_data_load
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SimpleQueueDead.Arn
            BatchSize: 1

  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "SampleTopicPoc"

  MySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: sarkarpranab66@gmail.com
      Protocol: email
      TopicArn: !Ref 'MySNSTopic'

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: poc-data-load-v1
      VersioningConfiguration:
        Status: Enabled

  SimpleQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 86400
      QueueName: "SimpleQueuePoc"
      VisibilityTimeout: 180
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SimpleQueueDead.Arn
        maxReceiveCount: 2

  SimpleQueueDead:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 86400
      QueueName: "SimpleQueuePocDlq"
      VisibilityTimeout: 180

  PocTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: "user_id"
          AttributeType: "S"        
      KeySchema: 
        - AttributeName: "user_id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "25"
        WriteCapacityUnits: "25"
      TableName: "pocDataImportSam"        


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
